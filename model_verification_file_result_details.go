/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * API version: 4.0.0
 * Contact: support@elasticemail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
	"time"
)

// VerificationFileResultDetails Detailed verification file result info
type VerificationFileResultDetails struct {
	// Verification result's details
	VerificationResult *[]EmailValidationResult `json:"VerificationResult,omitempty"`
	// Identifier of this verification result
	VerificationID *string `json:"VerificationID,omitempty"`
	// Origin file name
	Filename *string `json:"Filename,omitempty"`
	// In what state does this verification result currently is
	VerificationStatus *VerificationStatus `json:"VerificationStatus,omitempty"`
	// How many emails were detected in the file for verification
	FileUploadResult *FileUploadResult `json:"FileUploadResult,omitempty"`
	// Date of creation in YYYY-MM-DDThh:ii:ss format
	DateAdded *time.Time `json:"DateAdded,omitempty"`
	// Origin file extension
	Source *string `json:"Source,omitempty"`
}

// NewVerificationFileResultDetails instantiates a new VerificationFileResultDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationFileResultDetails() *VerificationFileResultDetails {
	this := VerificationFileResultDetails{}
	return &this
}

// NewVerificationFileResultDetailsWithDefaults instantiates a new VerificationFileResultDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationFileResultDetailsWithDefaults() *VerificationFileResultDetails {
	this := VerificationFileResultDetails{}
	return &this
}

// GetVerificationResult returns the VerificationResult field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetVerificationResult() []EmailValidationResult {
	if o == nil || o.VerificationResult == nil {
		var ret []EmailValidationResult
		return ret
	}
	return *o.VerificationResult
}

// GetVerificationResultOk returns a tuple with the VerificationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetVerificationResultOk() (*[]EmailValidationResult, bool) {
	if o == nil || o.VerificationResult == nil {
		return nil, false
	}
	return o.VerificationResult, true
}

// HasVerificationResult returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasVerificationResult() bool {
	if o != nil && o.VerificationResult != nil {
		return true
	}

	return false
}

// SetVerificationResult gets a reference to the given []EmailValidationResult and assigns it to the VerificationResult field.
func (o *VerificationFileResultDetails) SetVerificationResult(v []EmailValidationResult) {
	o.VerificationResult = &v
}

// GetVerificationID returns the VerificationID field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetVerificationID() string {
	if o == nil || o.VerificationID == nil {
		var ret string
		return ret
	}
	return *o.VerificationID
}

// GetVerificationIDOk returns a tuple with the VerificationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetVerificationIDOk() (*string, bool) {
	if o == nil || o.VerificationID == nil {
		return nil, false
	}
	return o.VerificationID, true
}

// HasVerificationID returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasVerificationID() bool {
	if o != nil && o.VerificationID != nil {
		return true
	}

	return false
}

// SetVerificationID gets a reference to the given string and assigns it to the VerificationID field.
func (o *VerificationFileResultDetails) SetVerificationID(v string) {
	o.VerificationID = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *VerificationFileResultDetails) SetFilename(v string) {
	o.Filename = &v
}

// GetVerificationStatus returns the VerificationStatus field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetVerificationStatus() VerificationStatus {
	if o == nil || o.VerificationStatus == nil {
		var ret VerificationStatus
		return ret
	}
	return *o.VerificationStatus
}

// GetVerificationStatusOk returns a tuple with the VerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetVerificationStatusOk() (*VerificationStatus, bool) {
	if o == nil || o.VerificationStatus == nil {
		return nil, false
	}
	return o.VerificationStatus, true
}

// HasVerificationStatus returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasVerificationStatus() bool {
	if o != nil && o.VerificationStatus != nil {
		return true
	}

	return false
}

// SetVerificationStatus gets a reference to the given VerificationStatus and assigns it to the VerificationStatus field.
func (o *VerificationFileResultDetails) SetVerificationStatus(v VerificationStatus) {
	o.VerificationStatus = &v
}

// GetFileUploadResult returns the FileUploadResult field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetFileUploadResult() FileUploadResult {
	if o == nil || o.FileUploadResult == nil {
		var ret FileUploadResult
		return ret
	}
	return *o.FileUploadResult
}

// GetFileUploadResultOk returns a tuple with the FileUploadResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetFileUploadResultOk() (*FileUploadResult, bool) {
	if o == nil || o.FileUploadResult == nil {
		return nil, false
	}
	return o.FileUploadResult, true
}

// HasFileUploadResult returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasFileUploadResult() bool {
	if o != nil && o.FileUploadResult != nil {
		return true
	}

	return false
}

// SetFileUploadResult gets a reference to the given FileUploadResult and assigns it to the FileUploadResult field.
func (o *VerificationFileResultDetails) SetFileUploadResult(v FileUploadResult) {
	o.FileUploadResult = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetDateAdded() time.Time {
	if o == nil || o.DateAdded == nil {
		var ret time.Time
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetDateAddedOk() (*time.Time, bool) {
	if o == nil || o.DateAdded == nil {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasDateAdded() bool {
	if o != nil && o.DateAdded != nil {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given time.Time and assigns it to the DateAdded field.
func (o *VerificationFileResultDetails) SetDateAdded(v time.Time) {
	o.DateAdded = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *VerificationFileResultDetails) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFileResultDetails) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *VerificationFileResultDetails) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *VerificationFileResultDetails) SetSource(v string) {
	o.Source = &v
}

func (o VerificationFileResultDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VerificationResult != nil {
		toSerialize["VerificationResult"] = o.VerificationResult
	}
	if o.VerificationID != nil {
		toSerialize["VerificationID"] = o.VerificationID
	}
	if o.Filename != nil {
		toSerialize["Filename"] = o.Filename
	}
	if o.VerificationStatus != nil {
		toSerialize["VerificationStatus"] = o.VerificationStatus
	}
	if o.FileUploadResult != nil {
		toSerialize["FileUploadResult"] = o.FileUploadResult
	}
	if o.DateAdded != nil {
		toSerialize["DateAdded"] = o.DateAdded
	}
	if o.Source != nil {
		toSerialize["Source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableVerificationFileResultDetails struct {
	value *VerificationFileResultDetails
	isSet bool
}

func (v NullableVerificationFileResultDetails) Get() *VerificationFileResultDetails {
	return v.value
}

func (v *NullableVerificationFileResultDetails) Set(val *VerificationFileResultDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationFileResultDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationFileResultDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationFileResultDetails(val *VerificationFileResultDetails) *NullableVerificationFileResultDetails {
	return &NullableVerificationFileResultDetails{value: val, isSet: true}
}

func (v NullableVerificationFileResultDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationFileResultDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


