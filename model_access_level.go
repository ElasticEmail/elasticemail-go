/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
	"fmt"
)

// AccessLevel the model 'AccessLevel'
type AccessLevel string

// List of AccessLevel
const (
	NONE AccessLevel = "None"
	VIEW_ACCOUNT AccessLevel = "ViewAccount"
	VIEW_CONTACTS AccessLevel = "ViewContacts"
	VIEW_FORMS AccessLevel = "ViewForms"
	VIEW_TEMPLATES AccessLevel = "ViewTemplates"
	VIEW_CAMPAIGNS AccessLevel = "ViewCampaigns"
	VIEW_CHANNELS AccessLevel = "ViewChannels"
	VIEW_AUTOMATIONS AccessLevel = "ViewAutomations"
	VIEW_SURVEYS AccessLevel = "ViewSurveys"
	VIEW_SETTINGS AccessLevel = "ViewSettings"
	VIEW_BILLING AccessLevel = "ViewBilling"
	VIEW_SUB_ACCOUNTS AccessLevel = "ViewSubAccounts"
	VIEW_USERS AccessLevel = "ViewUsers"
	VIEW_FILES AccessLevel = "ViewFiles"
	VIEW_REPORTS AccessLevel = "ViewReports"
	MODIFY_ACCOUNT AccessLevel = "ModifyAccount"
	MODIFY_CONTACTS AccessLevel = "ModifyContacts"
	MODIFY_FORMS AccessLevel = "ModifyForms"
	MODIFY_TEMPLATES AccessLevel = "ModifyTemplates"
	MODIFY_CAMPAIGNS AccessLevel = "ModifyCampaigns"
	MODIFY_CHANNELS AccessLevel = "ModifyChannels"
	MODIFY_AUTOMATIONS AccessLevel = "ModifyAutomations"
	MODIFY_SURVEYS AccessLevel = "ModifySurveys"
	MODIFY_FILES AccessLevel = "ModifyFiles"
	EXPORT AccessLevel = "Export"
	SEND_SMTP AccessLevel = "SendSmtp"
	SEND_SMS AccessLevel = "SendSMS"
	MODIFY_SETTINGS AccessLevel = "ModifySettings"
	MODIFY_BILLING AccessLevel = "ModifyBilling"
	MODIFY_PROFILE AccessLevel = "ModifyProfile"
	MODIFY_SUB_ACCOUNTS AccessLevel = "ModifySubAccounts"
	MODIFY_USERS AccessLevel = "ModifyUsers"
	SECURITY AccessLevel = "Security"
	MODIFY_LANGUAGE AccessLevel = "ModifyLanguage"
	VIEW_SUPPORT AccessLevel = "ViewSupport"
	SEND_HTTP AccessLevel = "SendHttp"
	MODIFY2_FA_EMAIL AccessLevel = "Modify2FAEmail"
	MODIFY_SUPPORT AccessLevel = "ModifySupport"
	VIEW_CUSTOM_FIELDS AccessLevel = "ViewCustomFields"
	MODIFY_CUSTOM_FIELDS AccessLevel = "ModifyCustomFields"
	MODIFY_WEB_NOTIFICATIONS AccessLevel = "ModifyWebNotifications"
	EXTENDED_LOGS AccessLevel = "ExtendedLogs"
	VERIFY_EMAILS AccessLevel = "VerifyEmails"
	MODIFY2_FA_SMS AccessLevel = "Modify2FASms"
	MODIFY_LANDING_PAGES AccessLevel = "ModifyLandingPages"
	VIEW_LANDING_PAGES AccessLevel = "ViewLandingPages"
	MODIFY_SUPPRESSIONS AccessLevel = "ModifySuppressions"
	VIEW_SUPPRESSIONS AccessLevel = "ViewSuppressions"
	VIEW_DRAG_DROP_EDITOR AccessLevel = "ViewDragDropEditor"
	VIEW_TEMPLATE_EDITOR AccessLevel = "ViewTemplateEditor"
	VIEW_AI_TOOLS AccessLevel = "ViewAITools"
)

// All allowed values of AccessLevel enum
var AllowedAccessLevelEnumValues = []AccessLevel{
	"None",
	"ViewAccount",
	"ViewContacts",
	"ViewForms",
	"ViewTemplates",
	"ViewCampaigns",
	"ViewChannels",
	"ViewAutomations",
	"ViewSurveys",
	"ViewSettings",
	"ViewBilling",
	"ViewSubAccounts",
	"ViewUsers",
	"ViewFiles",
	"ViewReports",
	"ModifyAccount",
	"ModifyContacts",
	"ModifyForms",
	"ModifyTemplates",
	"ModifyCampaigns",
	"ModifyChannels",
	"ModifyAutomations",
	"ModifySurveys",
	"ModifyFiles",
	"Export",
	"SendSmtp",
	"SendSMS",
	"ModifySettings",
	"ModifyBilling",
	"ModifyProfile",
	"ModifySubAccounts",
	"ModifyUsers",
	"Security",
	"ModifyLanguage",
	"ViewSupport",
	"SendHttp",
	"Modify2FAEmail",
	"ModifySupport",
	"ViewCustomFields",
	"ModifyCustomFields",
	"ModifyWebNotifications",
	"ExtendedLogs",
	"VerifyEmails",
	"Modify2FASms",
	"ModifyLandingPages",
	"ViewLandingPages",
	"ModifySuppressions",
	"ViewSuppressions",
	"ViewDragDropEditor",
	"ViewTemplateEditor",
	"ViewAITools",
}

func (v *AccessLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccessLevel(value)
	for _, existing := range AllowedAccessLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccessLevel", value)
}

// NewAccessLevelFromValue returns a pointer to a valid AccessLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccessLevelFromValue(v string) (*AccessLevel, error) {
	ev := AccessLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccessLevel: valid values are %v", v, AllowedAccessLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccessLevel) IsValid() bool {
	for _, existing := range AllowedAccessLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccessLevel value
func (v AccessLevel) Ptr() *AccessLevel {
	return &v
}

type NullableAccessLevel struct {
	value *AccessLevel
	isSet bool
}

func (v NullableAccessLevel) Get() *AccessLevel {
	return v.value
}

func (v *NullableAccessLevel) Set(val *AccessLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessLevel(val *AccessLevel) *NullableAccessLevel {
	return &NullableAccessLevel{value: val, isSet: true}
}

func (v NullableAccessLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

