/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
)

// checks if the DomainPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainPayload{}

// DomainPayload struct for DomainPayload
type DomainPayload struct {
	// Name of selected domain.
	Domain *string `json:"Domain,omitempty"`
	SetAsDefault *bool `json:"SetAsDefault,omitempty"`
}

// NewDomainPayload instantiates a new DomainPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainPayload() *DomainPayload {
	this := DomainPayload{}
	return &this
}

// NewDomainPayloadWithDefaults instantiates a new DomainPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainPayloadWithDefaults() *DomainPayload {
	this := DomainPayload{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DomainPayload) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainPayload) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DomainPayload) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DomainPayload) SetDomain(v string) {
	o.Domain = &v
}

// GetSetAsDefault returns the SetAsDefault field value if set, zero value otherwise.
func (o *DomainPayload) GetSetAsDefault() bool {
	if o == nil || IsNil(o.SetAsDefault) {
		var ret bool
		return ret
	}
	return *o.SetAsDefault
}

// GetSetAsDefaultOk returns a tuple with the SetAsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainPayload) GetSetAsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.SetAsDefault) {
		return nil, false
	}
	return o.SetAsDefault, true
}

// HasSetAsDefault returns a boolean if a field has been set.
func (o *DomainPayload) HasSetAsDefault() bool {
	if o != nil && !IsNil(o.SetAsDefault) {
		return true
	}

	return false
}

// SetSetAsDefault gets a reference to the given bool and assigns it to the SetAsDefault field.
func (o *DomainPayload) SetSetAsDefault(v bool) {
	o.SetAsDefault = &v
}

func (o DomainPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["Domain"] = o.Domain
	}
	if !IsNil(o.SetAsDefault) {
		toSerialize["SetAsDefault"] = o.SetAsDefault
	}
	return toSerialize, nil
}

type NullableDomainPayload struct {
	value *DomainPayload
	isSet bool
}

func (v NullableDomainPayload) Get() *DomainPayload {
	return v.value
}

func (v *NullableDomainPayload) Set(val *DomainPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainPayload(val *DomainPayload) *NullableDomainPayload {
	return &NullableDomainPayload{value: val, isSet: true}
}

func (v NullableDomainPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


