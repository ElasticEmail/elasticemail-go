/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * API version: 4.0.0
 * Contact: support@elasticemail.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
)

// ChannelLogStatusSummary Summary of channel log status
type ChannelLogStatusSummary struct {
	// Channel name
	ChannelName *string `json:"ChannelName,omitempty"`
	// Number of recipients
	Recipients *int64 `json:"Recipients,omitempty"`
	// Number of emails
	EmailTotal *int64 `json:"EmailTotal,omitempty"`
	// Number of SMS
	SmsTotal *int64 `json:"SmsTotal,omitempty"`
	// Number of delivered messages
	Delivered *int64 `json:"Delivered,omitempty"`
	// Number of bounced messages
	Bounced *int64 `json:"Bounced,omitempty"`
	// Number of messages in progress
	InProgress *int64 `json:"InProgress,omitempty"`
	// Number of opened messages
	Opened *int64 `json:"Opened,omitempty"`
	// Number of clicked messages
	Clicked *int64 `json:"Clicked,omitempty"`
	// Number of unsubscribed messages
	Unsubscribed *int64 `json:"Unsubscribed,omitempty"`
	// Number of complaint messages
	Complaints *int64 `json:"Complaints,omitempty"`
	// Number of inbound messages
	Inbound *int64 `json:"Inbound,omitempty"`
	// Number of manually cancelled messages
	ManualCancel *int64 `json:"ManualCancel,omitempty"`
	// Number of messages flagged with 'Not Delivered'
	NotDelivered *int64 `json:"NotDelivered,omitempty"`
}

// NewChannelLogStatusSummary instantiates a new ChannelLogStatusSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelLogStatusSummary() *ChannelLogStatusSummary {
	this := ChannelLogStatusSummary{}
	return &this
}

// NewChannelLogStatusSummaryWithDefaults instantiates a new ChannelLogStatusSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelLogStatusSummaryWithDefaults() *ChannelLogStatusSummary {
	this := ChannelLogStatusSummary{}
	return &this
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetChannelName() string {
	if o == nil || o.ChannelName == nil {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetChannelNameOk() (*string, bool) {
	if o == nil || o.ChannelName == nil {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasChannelName() bool {
	if o != nil && o.ChannelName != nil {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *ChannelLogStatusSummary) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetRecipients() int64 {
	if o == nil || o.Recipients == nil {
		var ret int64
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetRecipientsOk() (*int64, bool) {
	if o == nil || o.Recipients == nil {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasRecipients() bool {
	if o != nil && o.Recipients != nil {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given int64 and assigns it to the Recipients field.
func (o *ChannelLogStatusSummary) SetRecipients(v int64) {
	o.Recipients = &v
}

// GetEmailTotal returns the EmailTotal field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetEmailTotal() int64 {
	if o == nil || o.EmailTotal == nil {
		var ret int64
		return ret
	}
	return *o.EmailTotal
}

// GetEmailTotalOk returns a tuple with the EmailTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetEmailTotalOk() (*int64, bool) {
	if o == nil || o.EmailTotal == nil {
		return nil, false
	}
	return o.EmailTotal, true
}

// HasEmailTotal returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasEmailTotal() bool {
	if o != nil && o.EmailTotal != nil {
		return true
	}

	return false
}

// SetEmailTotal gets a reference to the given int64 and assigns it to the EmailTotal field.
func (o *ChannelLogStatusSummary) SetEmailTotal(v int64) {
	o.EmailTotal = &v
}

// GetSmsTotal returns the SmsTotal field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetSmsTotal() int64 {
	if o == nil || o.SmsTotal == nil {
		var ret int64
		return ret
	}
	return *o.SmsTotal
}

// GetSmsTotalOk returns a tuple with the SmsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetSmsTotalOk() (*int64, bool) {
	if o == nil || o.SmsTotal == nil {
		return nil, false
	}
	return o.SmsTotal, true
}

// HasSmsTotal returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasSmsTotal() bool {
	if o != nil && o.SmsTotal != nil {
		return true
	}

	return false
}

// SetSmsTotal gets a reference to the given int64 and assigns it to the SmsTotal field.
func (o *ChannelLogStatusSummary) SetSmsTotal(v int64) {
	o.SmsTotal = &v
}

// GetDelivered returns the Delivered field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetDelivered() int64 {
	if o == nil || o.Delivered == nil {
		var ret int64
		return ret
	}
	return *o.Delivered
}

// GetDeliveredOk returns a tuple with the Delivered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetDeliveredOk() (*int64, bool) {
	if o == nil || o.Delivered == nil {
		return nil, false
	}
	return o.Delivered, true
}

// HasDelivered returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasDelivered() bool {
	if o != nil && o.Delivered != nil {
		return true
	}

	return false
}

// SetDelivered gets a reference to the given int64 and assigns it to the Delivered field.
func (o *ChannelLogStatusSummary) SetDelivered(v int64) {
	o.Delivered = &v
}

// GetBounced returns the Bounced field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetBounced() int64 {
	if o == nil || o.Bounced == nil {
		var ret int64
		return ret
	}
	return *o.Bounced
}

// GetBouncedOk returns a tuple with the Bounced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetBouncedOk() (*int64, bool) {
	if o == nil || o.Bounced == nil {
		return nil, false
	}
	return o.Bounced, true
}

// HasBounced returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasBounced() bool {
	if o != nil && o.Bounced != nil {
		return true
	}

	return false
}

// SetBounced gets a reference to the given int64 and assigns it to the Bounced field.
func (o *ChannelLogStatusSummary) SetBounced(v int64) {
	o.Bounced = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetInProgress() int64 {
	if o == nil || o.InProgress == nil {
		var ret int64
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetInProgressOk() (*int64, bool) {
	if o == nil || o.InProgress == nil {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasInProgress() bool {
	if o != nil && o.InProgress != nil {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given int64 and assigns it to the InProgress field.
func (o *ChannelLogStatusSummary) SetInProgress(v int64) {
	o.InProgress = &v
}

// GetOpened returns the Opened field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetOpened() int64 {
	if o == nil || o.Opened == nil {
		var ret int64
		return ret
	}
	return *o.Opened
}

// GetOpenedOk returns a tuple with the Opened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetOpenedOk() (*int64, bool) {
	if o == nil || o.Opened == nil {
		return nil, false
	}
	return o.Opened, true
}

// HasOpened returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasOpened() bool {
	if o != nil && o.Opened != nil {
		return true
	}

	return false
}

// SetOpened gets a reference to the given int64 and assigns it to the Opened field.
func (o *ChannelLogStatusSummary) SetOpened(v int64) {
	o.Opened = &v
}

// GetClicked returns the Clicked field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetClicked() int64 {
	if o == nil || o.Clicked == nil {
		var ret int64
		return ret
	}
	return *o.Clicked
}

// GetClickedOk returns a tuple with the Clicked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetClickedOk() (*int64, bool) {
	if o == nil || o.Clicked == nil {
		return nil, false
	}
	return o.Clicked, true
}

// HasClicked returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasClicked() bool {
	if o != nil && o.Clicked != nil {
		return true
	}

	return false
}

// SetClicked gets a reference to the given int64 and assigns it to the Clicked field.
func (o *ChannelLogStatusSummary) SetClicked(v int64) {
	o.Clicked = &v
}

// GetUnsubscribed returns the Unsubscribed field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetUnsubscribed() int64 {
	if o == nil || o.Unsubscribed == nil {
		var ret int64
		return ret
	}
	return *o.Unsubscribed
}

// GetUnsubscribedOk returns a tuple with the Unsubscribed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetUnsubscribedOk() (*int64, bool) {
	if o == nil || o.Unsubscribed == nil {
		return nil, false
	}
	return o.Unsubscribed, true
}

// HasUnsubscribed returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasUnsubscribed() bool {
	if o != nil && o.Unsubscribed != nil {
		return true
	}

	return false
}

// SetUnsubscribed gets a reference to the given int64 and assigns it to the Unsubscribed field.
func (o *ChannelLogStatusSummary) SetUnsubscribed(v int64) {
	o.Unsubscribed = &v
}

// GetComplaints returns the Complaints field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetComplaints() int64 {
	if o == nil || o.Complaints == nil {
		var ret int64
		return ret
	}
	return *o.Complaints
}

// GetComplaintsOk returns a tuple with the Complaints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetComplaintsOk() (*int64, bool) {
	if o == nil || o.Complaints == nil {
		return nil, false
	}
	return o.Complaints, true
}

// HasComplaints returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasComplaints() bool {
	if o != nil && o.Complaints != nil {
		return true
	}

	return false
}

// SetComplaints gets a reference to the given int64 and assigns it to the Complaints field.
func (o *ChannelLogStatusSummary) SetComplaints(v int64) {
	o.Complaints = &v
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetInbound() int64 {
	if o == nil || o.Inbound == nil {
		var ret int64
		return ret
	}
	return *o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetInboundOk() (*int64, bool) {
	if o == nil || o.Inbound == nil {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasInbound() bool {
	if o != nil && o.Inbound != nil {
		return true
	}

	return false
}

// SetInbound gets a reference to the given int64 and assigns it to the Inbound field.
func (o *ChannelLogStatusSummary) SetInbound(v int64) {
	o.Inbound = &v
}

// GetManualCancel returns the ManualCancel field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetManualCancel() int64 {
	if o == nil || o.ManualCancel == nil {
		var ret int64
		return ret
	}
	return *o.ManualCancel
}

// GetManualCancelOk returns a tuple with the ManualCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetManualCancelOk() (*int64, bool) {
	if o == nil || o.ManualCancel == nil {
		return nil, false
	}
	return o.ManualCancel, true
}

// HasManualCancel returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasManualCancel() bool {
	if o != nil && o.ManualCancel != nil {
		return true
	}

	return false
}

// SetManualCancel gets a reference to the given int64 and assigns it to the ManualCancel field.
func (o *ChannelLogStatusSummary) SetManualCancel(v int64) {
	o.ManualCancel = &v
}

// GetNotDelivered returns the NotDelivered field value if set, zero value otherwise.
func (o *ChannelLogStatusSummary) GetNotDelivered() int64 {
	if o == nil || o.NotDelivered == nil {
		var ret int64
		return ret
	}
	return *o.NotDelivered
}

// GetNotDeliveredOk returns a tuple with the NotDelivered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelLogStatusSummary) GetNotDeliveredOk() (*int64, bool) {
	if o == nil || o.NotDelivered == nil {
		return nil, false
	}
	return o.NotDelivered, true
}

// HasNotDelivered returns a boolean if a field has been set.
func (o *ChannelLogStatusSummary) HasNotDelivered() bool {
	if o != nil && o.NotDelivered != nil {
		return true
	}

	return false
}

// SetNotDelivered gets a reference to the given int64 and assigns it to the NotDelivered field.
func (o *ChannelLogStatusSummary) SetNotDelivered(v int64) {
	o.NotDelivered = &v
}

func (o ChannelLogStatusSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelName != nil {
		toSerialize["ChannelName"] = o.ChannelName
	}
	if o.Recipients != nil {
		toSerialize["Recipients"] = o.Recipients
	}
	if o.EmailTotal != nil {
		toSerialize["EmailTotal"] = o.EmailTotal
	}
	if o.SmsTotal != nil {
		toSerialize["SmsTotal"] = o.SmsTotal
	}
	if o.Delivered != nil {
		toSerialize["Delivered"] = o.Delivered
	}
	if o.Bounced != nil {
		toSerialize["Bounced"] = o.Bounced
	}
	if o.InProgress != nil {
		toSerialize["InProgress"] = o.InProgress
	}
	if o.Opened != nil {
		toSerialize["Opened"] = o.Opened
	}
	if o.Clicked != nil {
		toSerialize["Clicked"] = o.Clicked
	}
	if o.Unsubscribed != nil {
		toSerialize["Unsubscribed"] = o.Unsubscribed
	}
	if o.Complaints != nil {
		toSerialize["Complaints"] = o.Complaints
	}
	if o.Inbound != nil {
		toSerialize["Inbound"] = o.Inbound
	}
	if o.ManualCancel != nil {
		toSerialize["ManualCancel"] = o.ManualCancel
	}
	if o.NotDelivered != nil {
		toSerialize["NotDelivered"] = o.NotDelivered
	}
	return json.Marshal(toSerialize)
}

type NullableChannelLogStatusSummary struct {
	value *ChannelLogStatusSummary
	isSet bool
}

func (v NullableChannelLogStatusSummary) Get() *ChannelLogStatusSummary {
	return v.value
}

func (v *NullableChannelLogStatusSummary) Set(val *ChannelLogStatusSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelLogStatusSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelLogStatusSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelLogStatusSummary(val *ChannelLogStatusSummary) *NullableChannelLogStatusSummary {
	return &NullableChannelLogStatusSummary{value: val, isSet: true}
}

func (v NullableChannelLogStatusSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelLogStatusSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


