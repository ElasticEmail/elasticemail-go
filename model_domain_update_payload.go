/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
)

// checks if the DomainUpdatePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainUpdatePayload{}

// DomainUpdatePayload struct for DomainUpdatePayload
type DomainUpdatePayload struct {
	CertificateStatus *CertificateValidationStatus `json:"CertificateStatus,omitempty"`
	VERP *bool `json:"VERP,omitempty"`
	CustomBouncesDomain *string `json:"CustomBouncesDomain,omitempty"`
	IsCustomBouncesDomainDefault *bool `json:"IsCustomBouncesDomainDefault,omitempty"`
}

// NewDomainUpdatePayload instantiates a new DomainUpdatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainUpdatePayload() *DomainUpdatePayload {
	this := DomainUpdatePayload{}
	var certificateStatus CertificateValidationStatus = ERROR_OCCURED
	this.CertificateStatus = &certificateStatus
	return &this
}

// NewDomainUpdatePayloadWithDefaults instantiates a new DomainUpdatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainUpdatePayloadWithDefaults() *DomainUpdatePayload {
	this := DomainUpdatePayload{}
	var certificateStatus CertificateValidationStatus = ERROR_OCCURED
	this.CertificateStatus = &certificateStatus
	return &this
}

// GetCertificateStatus returns the CertificateStatus field value if set, zero value otherwise.
func (o *DomainUpdatePayload) GetCertificateStatus() CertificateValidationStatus {
	if o == nil || IsNil(o.CertificateStatus) {
		var ret CertificateValidationStatus
		return ret
	}
	return *o.CertificateStatus
}

// GetCertificateStatusOk returns a tuple with the CertificateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUpdatePayload) GetCertificateStatusOk() (*CertificateValidationStatus, bool) {
	if o == nil || IsNil(o.CertificateStatus) {
		return nil, false
	}
	return o.CertificateStatus, true
}

// HasCertificateStatus returns a boolean if a field has been set.
func (o *DomainUpdatePayload) HasCertificateStatus() bool {
	if o != nil && !IsNil(o.CertificateStatus) {
		return true
	}

	return false
}

// SetCertificateStatus gets a reference to the given CertificateValidationStatus and assigns it to the CertificateStatus field.
func (o *DomainUpdatePayload) SetCertificateStatus(v CertificateValidationStatus) {
	o.CertificateStatus = &v
}

// GetVERP returns the VERP field value if set, zero value otherwise.
func (o *DomainUpdatePayload) GetVERP() bool {
	if o == nil || IsNil(o.VERP) {
		var ret bool
		return ret
	}
	return *o.VERP
}

// GetVERPOk returns a tuple with the VERP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUpdatePayload) GetVERPOk() (*bool, bool) {
	if o == nil || IsNil(o.VERP) {
		return nil, false
	}
	return o.VERP, true
}

// HasVERP returns a boolean if a field has been set.
func (o *DomainUpdatePayload) HasVERP() bool {
	if o != nil && !IsNil(o.VERP) {
		return true
	}

	return false
}

// SetVERP gets a reference to the given bool and assigns it to the VERP field.
func (o *DomainUpdatePayload) SetVERP(v bool) {
	o.VERP = &v
}

// GetCustomBouncesDomain returns the CustomBouncesDomain field value if set, zero value otherwise.
func (o *DomainUpdatePayload) GetCustomBouncesDomain() string {
	if o == nil || IsNil(o.CustomBouncesDomain) {
		var ret string
		return ret
	}
	return *o.CustomBouncesDomain
}

// GetCustomBouncesDomainOk returns a tuple with the CustomBouncesDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUpdatePayload) GetCustomBouncesDomainOk() (*string, bool) {
	if o == nil || IsNil(o.CustomBouncesDomain) {
		return nil, false
	}
	return o.CustomBouncesDomain, true
}

// HasCustomBouncesDomain returns a boolean if a field has been set.
func (o *DomainUpdatePayload) HasCustomBouncesDomain() bool {
	if o != nil && !IsNil(o.CustomBouncesDomain) {
		return true
	}

	return false
}

// SetCustomBouncesDomain gets a reference to the given string and assigns it to the CustomBouncesDomain field.
func (o *DomainUpdatePayload) SetCustomBouncesDomain(v string) {
	o.CustomBouncesDomain = &v
}

// GetIsCustomBouncesDomainDefault returns the IsCustomBouncesDomainDefault field value if set, zero value otherwise.
func (o *DomainUpdatePayload) GetIsCustomBouncesDomainDefault() bool {
	if o == nil || IsNil(o.IsCustomBouncesDomainDefault) {
		var ret bool
		return ret
	}
	return *o.IsCustomBouncesDomainDefault
}

// GetIsCustomBouncesDomainDefaultOk returns a tuple with the IsCustomBouncesDomainDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUpdatePayload) GetIsCustomBouncesDomainDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCustomBouncesDomainDefault) {
		return nil, false
	}
	return o.IsCustomBouncesDomainDefault, true
}

// HasIsCustomBouncesDomainDefault returns a boolean if a field has been set.
func (o *DomainUpdatePayload) HasIsCustomBouncesDomainDefault() bool {
	if o != nil && !IsNil(o.IsCustomBouncesDomainDefault) {
		return true
	}

	return false
}

// SetIsCustomBouncesDomainDefault gets a reference to the given bool and assigns it to the IsCustomBouncesDomainDefault field.
func (o *DomainUpdatePayload) SetIsCustomBouncesDomainDefault(v bool) {
	o.IsCustomBouncesDomainDefault = &v
}

func (o DomainUpdatePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainUpdatePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateStatus) {
		toSerialize["CertificateStatus"] = o.CertificateStatus
	}
	if !IsNil(o.VERP) {
		toSerialize["VERP"] = o.VERP
	}
	if !IsNil(o.CustomBouncesDomain) {
		toSerialize["CustomBouncesDomain"] = o.CustomBouncesDomain
	}
	if !IsNil(o.IsCustomBouncesDomainDefault) {
		toSerialize["IsCustomBouncesDomainDefault"] = o.IsCustomBouncesDomainDefault
	}
	return toSerialize, nil
}

type NullableDomainUpdatePayload struct {
	value *DomainUpdatePayload
	isSet bool
}

func (v NullableDomainUpdatePayload) Get() *DomainUpdatePayload {
	return v.value
}

func (v *NullableDomainUpdatePayload) Set(val *DomainUpdatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainUpdatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainUpdatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainUpdatePayload(val *DomainUpdatePayload) *NullableDomainUpdatePayload {
	return &NullableDomainUpdatePayload{value: val, isSet: true}
}

func (v NullableDomainUpdatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainUpdatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


